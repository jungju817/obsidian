{
	"nodes":[
		{"id":"12e0a1e09e5c22d2","type":"text","text":"## install\n\n\n\n```\nwget https://github.com/samhocevar/zzuf/archive/refs/tags/v0.15.tar.gz\ntar -zxvf v0.15.tar.gz\ncd ./zzuf-0.15\n```\n\n```\nsudo apt-get install autopoint libtool gettext libpopt-dev\nautoreconf -ivf\n```\n\n```\n./configure -- prefix=\"$HOME/install/\"\nmake\nmake install\n```\n\n","x":-280,"y":-380,"width":520,"height":340},
		{"id":"c05d9bd2ca84eb5d","type":"text","text":"## zzuf에 대해서\nzzuf는 multiple purpose fuzzer로 주요 대상은 미디어 플레이어, 이미지 뷰어 및 웹 브라우저이다. 그러나 objdump와 같은 시스템 유틸리티에서도 버그를 찾는 데 성공했다.\nzzuf는 deterministic하며 그래서 버그를 찾기 쉽다.\n\n","x":-280,"y":-1000,"width":520,"height":201},
		{"id":"5d85900a7eaf0bf9","type":"text","text":"## RESTRICTIONS\nzzuf는 공유 객체 프리로딩을 사용하여 자식 프로세스를 실행하므로, 프리로딩을 비활성화하는 매커니즘이 존재할 경우에는 zzuf가 실패할 수 있다. 예를 들어, setuid root binary는 일반 사용자로 실행될 때 퍼징되지 않을 것이다.\n동일한 이유로 zzuf는 정적으로 링크된 binary과 함께 작동하지 않는다. \n\n암튼 공유 라이브러리를 사용하는 매커니즘을 가지는 프로그램만 fuzzing이 된다는듯함","x":-880,"y":-1011,"width":520,"height":223},
		{"id":"20acd015d77116d8","type":"text","text":"## zzuf가 하는 것\n\n#### Input corruption\n\t  입력에서 무작위로 비트를 설정하거나 해제한다.\n\t  무작위 시드를 사용한다.\n  \n#### Fully automated\n\t  비용이 드는 파일 생성을 하지 않는다.\n\t  DVD, 네트워크 데이터, stdin과 같은 다양한 입력 소스와 작동한다.\n\n","x":400,"y":-1329,"width":640,"height":329},
		{"id":"2211ed2437106efd","type":"text","text":"### zzuf의 작동방식\n\n#### binary 제어\n\t테스트된 프로그램을 복제한다.\n\tstdout, exit value, signal 등을 확인한다.\n#### LD_PRELOAD 메커니즘\n\t파일 읽기 함수들을 가로챈다. - open(), read(), fopen(), fread() ...\n\t또한 malloc()을 사용하여 메모리 사용량을 확인한다.","x":400,"y":-929,"width":640,"height":329},
		{"id":"d60b3781d73dc5b3","type":"text","text":"## SYNOPSIS\n\n       zzuf  [-aAcdimnqSvx] [-s seed|-s start:stop] [-r ratio|-r min:max] [-f fuzzing] [-D delay]\n       [-j jobs] [-C crashes] [-B bytes] [-t seconds] [-T seconds] [-U  seconds]  [-M  mebibytes]\n       [-b  ranges]  [-p  ports]  [-P  protect]  [-R  refuse] [-l list] [-I include] [-E exclude]\n       [PROGRAM [ARGS]...]\n       zzuf -h | --help\n       zzuf -V | --version","x":567,"y":-536,"width":640,"height":233},
		{"id":"2fdf631394087221","type":"text","text":"## USAGE\nzzuf는 응용 프로그램 이름 뒤에 찾은 플래그들은 zzuf의 인자가 아닌 응용 프로그램의 인자로 간주한다.\n```\nzzuf -B 1000 cat -v /dev/zero\n```\n여기서 -v 는 cat에 대한 인자이다.","x":567,"y":-250,"width":640,"height":210},
		{"id":"22747809c61a3aaf","type":"text","text":"## DIAGNOSTICS\nzzuf의 종료 상태는 다음과 같다.\n\n- 종료 상태가 0이면 어떠한 자식 프로세스도 크래시하지 않았음을 나타낸다.\n- 하나 이상의 자식 프로세스가 크래시한 경우, 'zzuf'는 상태 1로 종료한다.","x":567,"y":0,"width":640,"height":160},
		{"id":"6b696768d6e25407","type":"text","text":"## OPTIONS\n\n **-a, --allow=list**: 지정된 IP 주소 목록에 대해서만 네트워크 입력을 퍼징합니다. 목록의 시작이 '!'이면 그 목록을 제외한 모든 주소가 퍼징됩니다.\n\n **-A, --autoinc**: 새 파일이 열릴 때마다 랜덤 시드를 증가시킵니다. 같은 파일이 여러 번 열리는 경우 다른 시드를 테스트하려면 필요합니다.\n   \n **-b, --bytes=ranges**: 파일에서 특정 오프셋의 바이트에 대해서만 퍼징을 제한합니다.\n   \n **-B, --max-bytes=n**: 특정 바이트 수가 출력될 때 자동으로 종료합니다.\n   \n **-c, --cmdline**: 명령어 라인에서 파일 이름이 지정된 응용 프로그램만 퍼징합니다.\n   \n **-C, --max-crashes=n**: n번의 크래시가 발생하면 자동으로 종료합니다.\n   \n **-d, --debug**: 디버그 메시지를 표시합니다.\n   \n **-D, --delay=delay**: 지정된 시간 간격으로 하나의 프로세스만 시작합니다.\n   \n **-E, --exclude=regex**: 정규 표현식과 일치하는 파일을 퍼징에서 제외합니다.\n   \n **-f, --fuzzing=mode**: 입력을 퍼징하는 방법을 선택합니다(xor, set, unset).\n   \n **-j, --jobs=jobs**: 동시에 실행되는 프로세스의 수를 지정합니다.\n   \n **-i, --stdin**: 응용 프로그램의 표준 입력을 퍼징합니다.\n   \n **-I, --include=regex**: 정규 표현식과 일치하는 파일만 퍼징합니다.\n   \n **-l, --list=list**: 목록에 있는 파일 디스크립터만 퍼징합니다.\n   \n **-m, --md5**: 프로그램의 표준 출력 대신 MD5 다이제스트만 출력합니다.\n   \n **-M, --max-memory=mebibytes**: 자식 프로세스가 할당할 수 있는 최대 메모리 양을 지정합니다.\n   \n **-n, --network**: 응용 프로그램의 네트워크 입력을 퍼징합니다.\n   \n **-p, --ports=ranges**: 네트워크 포트를 지정된 범위로 제한하여 퍼징합니다.\n   \n **-P, --protect=list**: 특정 문자를 보호하여 해당 문자가 나타나면 수정되지 않도록 합니다.\n   \n **-q, --quiet**: 응용 프로그램의 출력을 숨깁니다.\n   \n **-r, --ratio=ratio**: 비트를 무작위로 퍼징할 비율을 지정합니다.\n   \n **-R, --refuse=list**: 특정 문자를 거부하여 해당 문자가 나타나면 수정되지 않도록 합니다.\n   \n **-s, --seed=seed**: 퍼징에 사용할 랜덤 시드를 지정하거나 범위를 설정합니다.\n   \n **-S, --signal**: 자식 프로세스에서 코어 덤프를 생성하지 않도록 합니다.\n   \n **-t, --max-time=n**: n초 후에 퍼징을 자동으로 종료합니다.\n   \n **-T, --max-cputime=n**: CPU 시간이 n초를 초과하는 자식 프로세스를 자동으로 종료합니다.\n   \n **-U, --max-usertime=n**: 유저 시간이 n초를 초과하는 자식 프로세스를 자동으로 종료합니다.\n   \n **-v, --verbose**: 실행 중에 정보를 출력합니다.\n   \n **-x, --check-exit**: 종료 코드가 0이 아닌 프로세스를 보고합니다.\n   \n **-h, --help**: 도움말 메시지를 출력합니다.\n   \n **-V, --version**: 버전 정보를 출력합니다.","x":1280,"y":-1122,"width":731,"height":1406},
		{"id":"16f6eef2b985ef68","type":"text","text":"## Finding real bugs\n\ntarget은 tiffinfo로 했다. build는 생략하겠다.\n다음과 같은 명령어로 fuzzing을 할 수 있다.\n\n```\n./install_zzuf/bin/zzuf -q -C100 -s0:100000 -r0.001:0.02 -M1000 ./install_tiff/bin/tiffinfo ./palette-1c-1b.tiff\n```\n그러면 다음과 같이 crash가 뜬다.\n\n","x":-213,"y":260,"width":853,"height":220},
		{"id":"9da1b46efda00f94","type":"text","text":"## Example\n\nUszing zzuf and cat\n\n그림과 같은 test.txt 가 있다.\n\n","x":-1280,"y":240,"width":520,"height":140},
		{"id":"3c2d0bd6ef700a68","type":"file","file":"toor/picture/Pasted image 20231119171111.png","x":-1280,"y":380,"width":520,"height":195},
		{"id":"4ce232535d5ea6f6","type":"text","text":"\n한번 zzuf를 이용해서 mutate를 해보자.\n```\n./install/bin/zzuf -r0.001 cat test.txt\n```\n\n여기서 -r0.001이란 0.1%만큼 fuzz한다는 의미이다.\n잘 보면 2번쨰 L의 밑 부분에 \\_가 ]로 바뀐 것을 알 수 있다.\n","x":-1800,"y":657,"width":520,"height":180},
		{"id":"6dfd8b0038606605","type":"text","text":"한번 -r0.01로 해보자\n```\n./install/bin/zzuf -r0.01 cat test.txt\n```\n이제는 1%만큼 fuzz를 한다. 눈에 띄게 바뀐것을 볼 수 있다.\n\n","x":-1020,"y":680,"width":520,"height":200},
		{"id":"d78969434a7df01c","type":"file","file":"toor/picture/Pasted image 20231119171500.png","x":-1800,"y":837,"width":520,"height":184},
		{"id":"8019f237b7517174","type":"file","file":"toor/picture/Pasted image 20231119172819.png","x":-1187,"y":880,"width":854,"height":141},
		{"id":"66f6e1bd37c3cdcf","type":"file","file":"toor/picture/Pasted image 20231119234014.png","x":-213,"y":480,"width":853,"height":181},
		{"id":"72bbef1d7ee7380c","type":"text","text":"하지만 실제로 crash파일이 생성이된것은 아니다. 만약 이중 crash 파일로 만들고 싶다면 아래와 같이 한다.\n```\n./install_zzuf/bin/zzuf -s26 -r0.001:0.02 <palette-1c-1b.tiff> crash\n```\nseed와 ratio, 원본 파일명, crash 파일명을 적어서 crash 파일을 만들어낼 수 있다.","x":-213,"y":661,"width":853,"height":179},
		{"id":"15b8efee2baf1c78","type":"file","file":"toor/picture/Pasted image 20231119234323.png","x":-88,"y":840,"width":604,"height":80},
		{"id":"91a9e66fc901ad1c","type":"text","text":"여기서 적힌 옵션들을 해석하자면 다음과 같다,\n\n-q : 실행파일의 결과물을 출력하지 않는다.\n-c100 : crash가 100개가 뜨면 fuzz가 종료된다.\n-s0:100000 : random seed를 0,1,2,3 .... 100000로 한다.\n-M1000 : 자식프로세스 메모리할당량을 정한다.","x":700,"y":300,"width":420,"height":140},
		{"id":"5758bb53e8dc31fd","type":"text","text":"","x":884,"y":843,"width":516,"height":237},
		{"id":"52ad85cc63d7f981","type":"text","text":"deterministic : \n- bit flips(자동 추가 감지)\n- 간단한 산술 연산\n- 흥미로운 정수(0, 1, INT_MAX, ...)","x":-177,"y":-1180,"width":314,"height":140},
		{"id":"c4fcec03ff713a5b","x":-500,"y":531,"width":220,"height":79,"type":"text","text":"sigkill은 crash가 아니다.\n지극히 정상적인 경우이다."}
	],
	"edges":[
		{"id":"0de14daf750cec01","fromNode":"12e0a1e09e5c22d2","fromSide":"bottom","toNode":"9da1b46efda00f94","toSide":"top"},
		{"id":"5d46897ddd353aa6","fromNode":"12e0a1e09e5c22d2","fromSide":"right","toNode":"d60b3781d73dc5b3","toSide":"left"},
		{"id":"6861cf93181c88c8","fromNode":"c05d9bd2ca84eb5d","fromSide":"bottom","toNode":"12e0a1e09e5c22d2","toSide":"top"},
		{"id":"bdf3a21d3086988e","fromNode":"12e0a1e09e5c22d2","fromSide":"right","toNode":"2fdf631394087221","toSide":"left"},
		{"id":"011e7326e8d54aca","fromNode":"d60b3781d73dc5b3","fromSide":"right","toNode":"6b696768d6e25407","toSide":"left"},
		{"id":"a8e259bf4f0de8cb","fromNode":"12e0a1e09e5c22d2","fromSide":"right","toNode":"22747809c61a3aaf","toSide":"left"},
		{"id":"588551dc1183b1c5","fromNode":"c05d9bd2ca84eb5d","fromSide":"left","toNode":"5d85900a7eaf0bf9","toSide":"right"},
		{"id":"6a9416ae18752f43","fromNode":"c05d9bd2ca84eb5d","fromSide":"right","toNode":"20acd015d77116d8","toSide":"left"},
		{"id":"0cb82ad304d5522d","fromNode":"c05d9bd2ca84eb5d","fromSide":"right","toNode":"2211ed2437106efd","toSide":"left"},
		{"id":"5886df3d472071ca","fromNode":"9da1b46efda00f94","fromSide":"bottom","toNode":"4ce232535d5ea6f6","toSide":"top"},
		{"id":"e0d1ab701a479f4b","fromNode":"9da1b46efda00f94","fromSide":"bottom","toNode":"6dfd8b0038606605","toSide":"top"},
		{"id":"827d8a65059ea3b3","fromNode":"12e0a1e09e5c22d2","fromSide":"bottom","toNode":"16f6eef2b985ef68","toSide":"top"},
		{"id":"e901c325d8132524","fromNode":"16f6eef2b985ef68","fromSide":"right","toNode":"91a9e66fc901ad1c","toSide":"left"},
		{"id":"fc8d7b6c39cff608","fromNode":"12e0a1e09e5c22d2","fromSide":"right","toNode":"5758bb53e8dc31fd","toSide":"left"},
		{"id":"32e098a33bf5afd4","fromNode":"c05d9bd2ca84eb5d","fromSide":"top","toNode":"52ad85cc63d7f981","toSide":"bottom"},
		{"id":"30b9596259ae061b","fromNode":"66f6e1bd37c3cdcf","fromSide":"left","toNode":"c4fcec03ff713a5b","toSide":"right"}
	]
}